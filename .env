# =============================================================================
# DEVELOPMENT ENVIRONMENT CONFIGURATION
# Express.js Application Environment Variables
# =============================================================================

# -----------------------------------------------------------------------------
# CORE SERVER CONFIGURATION
# -----------------------------------------------------------------------------

# Server port binding - maintains localhost:3000 binding for backward compatibility
PORT=3000

# Host interface binding - localhost only for development security
HOST=127.0.0.1

# Node.js environment mode - enables development-specific behavior
NODE_ENV=development

# Application name identifier for logging and process management
APP_NAME=hao-backprop-test

# Application version - used in health check responses
APP_VERSION=1.0.0

# -----------------------------------------------------------------------------
# EXPRESS.JS FRAMEWORK CONFIGURATION
# -----------------------------------------------------------------------------

# Express.js trust proxy setting for development (false for localhost)
EXPRESS_TRUST_PROXY=false

# Express.js case sensitive routing (false for development flexibility)
EXPRESS_CASE_SENSITIVE=false

# Express.js strict routing (false for development flexibility)
EXPRESS_STRICT_ROUTING=false

# Express.js view cache setting (false for development hot reloading)
EXPRESS_VIEW_CACHE=false

# Express.js subdomain offset for development
EXPRESS_SUBDOMAIN_OFFSET=2

# -----------------------------------------------------------------------------
# WINSTON STRUCTURED LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Primary log level for development (DEBUG enables comprehensive logging)
LOG_LEVEL=debug

# Console logging format for development readability
LOG_FORMAT=dev

# Log file directory path for Winston transports
LOG_DIR=./logs

# Log file name pattern for daily rotation
LOG_FILENAME=app-%DATE%.log

# Error log file name pattern
LOG_ERROR_FILENAME=error-%DATE%.log

# Maximum log file size before rotation
LOG_MAX_SIZE=10m

# Maximum number of log files to retain
LOG_MAX_FILES=7

# Date pattern for log rotation (daily rotation)
LOG_DATE_PATTERN=YYYY-MM-DD

# Enable log file compression for storage efficiency
LOG_COMPRESS=true

# Console log colorization for development
LOG_COLORIZE=true

# Include timestamp in console logs
LOG_TIMESTAMP=true

# Pretty print JSON logs in development
LOG_PRETTY_PRINT=true

# Silent logging (false for development visibility)
LOG_SILENT=false

# -----------------------------------------------------------------------------
# MORGAN HTTP REQUEST LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Morgan logging format (combined provides comprehensive request logging)
MORGAN_FORMAT=combined

# Skip successful requests in production (false for development)
MORGAN_SKIP_SUCCESS=false

# Include response time in Morgan logs
MORGAN_RESPONSE_TIME=true

# Color output for Morgan logs in development
MORGAN_COLOR=true

# -----------------------------------------------------------------------------
# CORS MIDDLEWARE CONFIGURATION
# -----------------------------------------------------------------------------

# CORS origin configuration for development (allow all origins)
CORS_ORIGIN=*

# CORS credentials support
CORS_CREDENTIALS=true

# CORS allowed methods
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS

# CORS allowed headers
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# CORS preflight max age
CORS_MAX_AGE=86400

# -----------------------------------------------------------------------------
# HELMET SECURITY MIDDLEWARE CONFIGURATION
# -----------------------------------------------------------------------------

# Content Security Policy (relaxed for development)
HELMET_CSP_ENABLED=false

# DNS prefetch control
HELMET_DNS_PREFETCH_CONTROL=false

# Frame options (SAMEORIGIN for development)
HELMET_FRAME_OPTIONS=SAMEORIGIN

# Hide powered by Express header
HELMET_HIDE_POWERED_BY=true

# HTTP Strict Transport Security (disabled for localhost)
HELMET_HSTS_ENABLED=false

# IE no open (protection against IE executions)
HELMET_IE_NO_OPEN=true

# No sniff content type
HELMET_NO_SNIFF=true

# XSS filter
HELMET_XSS_FILTER=true

# -----------------------------------------------------------------------------
# BODY PARSER MIDDLEWARE CONFIGURATION
# -----------------------------------------------------------------------------

# JSON body parser limit
BODY_PARSER_JSON_LIMIT=10mb

# URL-encoded body parser limit
BODY_PARSER_URLENCODED_LIMIT=10mb

# Extended URL encoding support
BODY_PARSER_EXTENDED=true

# Body parser parameter limit
BODY_PARSER_PARAMETER_LIMIT=1000

# -----------------------------------------------------------------------------
# PM2 PROCESS MANAGEMENT CONFIGURATION
# -----------------------------------------------------------------------------

# PM2 instance name for development
PM2_INSTANCE_NAME=hao-backprop-test-dev

# PM2 execution mode (fork for development, cluster for production)
PM2_EXEC_MODE=fork

# PM2 instances count (1 for development)
PM2_INSTANCES=1

# PM2 automatic restart on file changes (true for development)
PM2_WATCH=true

# PM2 watch ignore patterns
PM2_IGNORE_WATCH=node_modules,logs,*.log

# PM2 maximum memory before restart (higher limit for development)
PM2_MAX_MEMORY_RESTART=150MB

# PM2 restart delay in development
PM2_RESTART_DELAY=1000

# PM2 maximum restart attempts
PM2_MAX_RESTARTS=5

# PM2 auto restart (true for development stability)
PM2_AUTORESTART=true

# -----------------------------------------------------------------------------
# HEALTH CHECK ENDPOINT CONFIGURATION
# -----------------------------------------------------------------------------

# Health check endpoint path
HEALTH_CHECK_PATH=/health

# Health check timeout in milliseconds
HEALTH_CHECK_TIMEOUT=5000

# Include system information in health check response
HEALTH_CHECK_INCLUDE_SYSTEM_INFO=true

# Include dependencies status in health check
HEALTH_CHECK_INCLUDE_DEPENDENCIES=false

# Health check response format (json)
HEALTH_CHECK_FORMAT=json

# -----------------------------------------------------------------------------
# ERROR HANDLING CONFIGURATION
# -----------------------------------------------------------------------------

# Stack trace visibility in error responses (true for development)
ERROR_STACK_TRACE=true

# Error details in response (full for development)
ERROR_DETAILS=full

# Log errors to console in development
ERROR_LOG_CONSOLE=true

# Error correlation ID generation
ERROR_CORRELATION_ID=true

# Error notification enabled (false for development)
ERROR_NOTIFICATIONS=false

# -----------------------------------------------------------------------------
# PERFORMANCE MONITORING CONFIGURATION
# -----------------------------------------------------------------------------

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# Response time warning threshold in milliseconds
RESPONSE_TIME_WARN=100

# Memory usage warning threshold in MB
MEMORY_WARN_THRESHOLD=100

# CPU usage warning threshold in percentage
CPU_WARN_THRESHOLD=80

# Concurrent connections limit (higher for development testing)
MAX_CONNECTIONS=1000

# Keep alive timeout
KEEP_ALIVE_TIMEOUT=5000

# -----------------------------------------------------------------------------
# DEVELOPMENT DEBUGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Debug namespace for development (enables all debug output)
DEBUG=*

# Node.js debugging port
DEBUG_PORT=9229

# Enable development debugging
DEV_DEBUG=true

# Verbose error reporting
VERBOSE_ERRORS=true

# Development middleware enabled
DEV_MIDDLEWARE=true

# Hot reload enabled for development
HOT_RELOAD=true

# Source maps enabled for debugging
SOURCE_MAPS=true

# -----------------------------------------------------------------------------
# TESTING AND VALIDATION CONFIGURATION
# -----------------------------------------------------------------------------

# Test mode flag (false for normal development operation)
TEST_MODE=false

# Mock services enabled (false for development)
MOCK_SERVICES=false

# API response delay for testing (0ms for development)
API_DELAY=0

# Request validation level (strict for development testing)
VALIDATION_LEVEL=strict

# Enable request/response logging for testing
TEST_LOGGING=true

# -----------------------------------------------------------------------------
# ENVIRONMENT INFORMATION
# -----------------------------------------------------------------------------

# Configuration file source identification
CONFIG_SOURCE=.env

# Configuration last updated timestamp
CONFIG_UPDATED=2024-01-15

# Development environment documentation
CONFIG_DOCS=See .env.example for complete variable documentation

# Environment validation status
CONFIG_VALIDATED=true

# Default timezone for development
TZ=UTC